apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow-server.fullname" . }}
  labels:
    {{- include "mlflow-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mlflow-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mlflow-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (.Values.serviceAccount.create) (.Values.serviceAccountName) }}
      serviceAccountName: {{ template "mlflow-server.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "MLFLOW_PORT"
              value: {{ .Values.service.port | quote}}
            - name: "ARTIFACT_STORE"
              value: {{ .Values.artifact.path | quote}}
            - name: "DATABASE"
              value: {{ .Values.database.name | quote}}              
            - name: "HOST"
              value: {{ .Values.database.host | quote}}
            - name: "PORT"
              value: {{ .Values.database.port | quote}}
            - name: "USERNAME"
              value: {{ .Values.database.user | quote}}
            - name: "PASSWORD"
            {{- if .Values.database.valueFromSecretName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.valueFromSecretName }}
                  key: {{ .Values.database.valueFromSecretKey }}
            {{- else }}
              value: {{ .Values.database.password  | quote}}
            {{- end }}
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key | quote}}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.extraEnvRaw }}
            {{- toYaml .Values.extraEnvRaw | nindent 12 }}
            {{- end }}
            - name: "DATABASE_URL"
              value: "postgresql+psycopg2://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
